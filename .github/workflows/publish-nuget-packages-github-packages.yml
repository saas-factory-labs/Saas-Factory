name: Publish NuGet Packages to NuGet.org

permissions:
  contents: read

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  workflow_dispatch:

jobs:
  publish-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-name:
          - "AppBlueprint.Presentation.ApiModule"
          - "AppBlueprint.UiKit"
          - "AppBlueprint.SharedKernel"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
          global-json-file: global.json

      - name: Install GitVersion
        run: |
          dotnet --version
          dotnet tool install --global GitVersion.Tool --version 6.1.0

      - name: Determine Version
        id: gitversion
        run: |
          # Debug: Show git status and config
          echo "=== Git Debug Info ==="
          git status
          git log --oneline -5
          git describe --tags --all || echo "No tags found"
          ls -la
          pwd
          echo "=== GitVersion Config ==="
          cat GitVersion.yml || echo "No GitVersion.yml found"
          echo "=== Running GitVersion ==="
          export PATH="$PATH:/root/.dotnet/tools"
          dotnet-gitversion --version
          RAW_VERSION=$(dotnet-gitversion /output json 2>&1 || echo '{}')
          echo "Raw GitVersion Output: $RAW_VERSION"
          VERSION=$(echo "$RAW_VERSION" | jq -r '.SemVer // empty' 2>/dev/null || echo "0.1.0")
          if [[ -z "$VERSION" || "$VERSION" == "null" ]]; then
            echo "GitVersion failed, using fallback version: 0.1.0"
            VERSION="0.1.0"
          fi
          echo "Final VERSION: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Clean build directories
        run: rm -rf obj bin
        working-directory: Code/AppBlueprint/Shared-Modules/${{ matrix.package-name }}

      - name: Restore dependencies
        run: dotnet restore
        working-directory: Code/AppBlueprint/Shared-Modules/${{ matrix.package-name }}

      - name: Build the project
        run: dotnet build --configuration Release
        working-directory: Code/AppBlueprint/Shared-Modules/${{ matrix.package-name }}

      - name: Pack NuGet package with versioning
        run: dotnet pack --configuration Release --output ./bin/Release --p:Version=${{ env.VERSION }}
        working-directory: Code/AppBlueprint/Shared-Modules/${{ matrix.package-name }}

      - name: Push to NuGet.org
        run: |
          echo "Pushing ${{ matrix.package-name }} to NuGet.org..."
          dotnet nuget push ./bin/Release/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
        working-directory: Code/AppBlueprint/Shared-Modules/${{ matrix.package-name }}
