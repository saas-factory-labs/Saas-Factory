type App {
  id: String!
  name: String
  deployments: [Deployment!]
}

type Deployment {
  id: String!
  environment: String!
  startedAt: String!
  finishedAt: String!
  status: String!
  dockerImage: [DockerImage!]
  sqlSchemaMigration: [SQLSchemaMigration!]
}

type SQLSchemaMigration {
  id: String
  name: String
}

type DockerImage {
  name: String
  tag: String
  digest: String
  size: Int
  architecture: String
  os: String
  created: String
  build: Build
}

type Build {
  id: String
  version: Int
  startedAt: String
  finishedAt: String
  status: String
  sourceCommit: String
}

type GitCommit {
  id: String
  message: String
}

type FeatureFlag {
  id: String
  name: String
  description: String
  deployments: [Deployment]
}

type NugetPackage {
  id: String
  name: String
  version: String
  description: String
  authors: [String]
  totalDownloads: Int
}

type ContainerAppEnvironment {
  id: String
  name: String
  description: String
  deployments: [Deployment]
}

type PulumiProject {
  id: String
  name: String
  description: String
  deployments: [Deployment]
}

type ContainerApp {
  id: String
  name: String
  description: String
  deployments: [Deployment]
}

type SQLDatabase {
  id: String
  name: String
  description: String
  deployments: [Deployment]
}

type SQLTable {
  id: String
  name: String
}

type SourceCodeLicense {
  id: String
  name: String
}

type UseCase {
  id: String
  name: String
}

type InfrastructureProvider {
  id: String
  name: String # Stipe, Cloudflare, Github, Grafanacloud, Elastic, etc
  description: String
  deployments: [Deployment]
}

type JiraIssue {
  id: String
  key: String
  summary: String
  description: String
  deployments: [Deployment]
}

type CVEVulnerability {
  id: String
  name: String
  description: String
  nugetPackages: [NugetPackage]
}

# gitRepository: GitRepository

# source: Build

# builds: [Build]

#   sourceBranch: String
#   sourceCommit: String

#   gitRepository: GitRepository

# labels: [Label]

# # type Label {
# #   key: String
# #   value: String
# # }

type DeploymentConfiguration {
  key: String
  value: String
}

# type GitCommit {
#   id: String
#   message: String
# }

# type GitRepository {
#   url: String
#   commit: GitCommit
# }

# type Build {
#   id: String
#   number: Int
#   startedAt: String
#   finishedAt: String
#   status: String
#   source: String
#   sourceBranch: String
#   sourceCommit: String
#   dockerImage: DockerImage
#   gitRepository: GitRepository
# }

# type App {
#   id: String
#   name: String
#   description: String
#   builds: [Build]
#   deployments: [Deployment]
# }

# type Feature {
#   application: Application
#   builds: [Build]
#   deployments: [Deployment]
# }

# type DeploymentEnvironment {
#   id: String
#   name: String
#   description: String
#   features: [Feature]
# }

# type NugetPackage {
#   id: String
#   name: String
#   version: String
#   description: String
#   authors: [String]
#   totalDownloads: Int
# }

type DockerImageLayer {
  id: String
  digest: String
  size: Int
  architecture: String
  os: String
  created: String
}

# type PulumiProject {
#   id: String
#   name: String
#   description: String
#   builds: [Build]
#   deployments: [Deployment]
# }

# type SharedInfrastucture {
#   id: String
#   name: String
#   description: String
#   builds: [Build]
#   deployments: [Deployment]
# }

# type InfrastructureResource {
#   id: String
#   name: String
#   description: String
#   builds: [Build]
#   deployments: [Deployment]
# }

# type ApplicationSpecificInfrastructure {
#   id: String
#   name: String
#   description: String
#   builds: [Build]
#   deployments: [Deployment]
# }

type ApplicationBlueprint {
  id: String
  name: String
  description: String
  builds: [Build]
  deployments: [Deployment]
}

type ExternalProvider {
  id: String
  name: String
  description: String
  builds: [Build]
  deployments: [Deployment]
}
