using AppBlueprint.DeveloperCli.Utilities;

namespace AppBlueprint.DeveloperCli.Commands;

internal static class GitCommitPushCommand
{
    public static Command Create()
    {
        // https://github.com/di-sukharev/opencommit - auto commit message generation

        var command = new Command("auto-commit-push-github",
            "Autogenerated command to commit and push changes to GitHub.")
        {
            // generate commit message using github cli and push to github - REQUIRES SUBSCRIPTION FOR GITHUB CLI COPILOT TO COPILOT TO WORK         
            new Option<string>("--message", "The commit message.")
        };
        // command.Handler = System.CommandLine.NamingConventionBinder.CommandHandler.Create<string>(() =>
        // {
        //     AnsiConsole.MarkupLine($"[green] making commit ...[/]");
        //     // CLIUtilities.RunShellCommand($" gh copilot suggest \"create commit message based on the source code files in the working directory\", "Database migrated successfully!", "Failed to migrate database.");
        // });

        return command;
    }

    public static void ExecuteInteractive()
    {
        string connectionString = AnsiConsole.Ask<string>("[green]Enter the database connection string:[/]");
        CliUtilities.RunShellCommand($"dotnet ef database update --connection \"{connectionString}\"",
            "Database migrated successfully!", "Failed to migrate database.");
    }
}
