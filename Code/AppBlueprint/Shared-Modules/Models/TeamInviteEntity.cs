// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AppBlueprint.Presentation.Ui.Sdk.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TeamInviteEntity : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The expireAt property</summary>
        public DateTimeOffset? ExpireAt { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The isActive property</summary>
        public bool? IsActive { get; set; }
        /// <summary>The owner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.UserEntity? Owner { get; set; }
#nullable restore
#else
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.UserEntity Owner { get; set; }
#endif
        /// <summary>The team property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamEntity? Team { get; set; }
#nullable restore
#else
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamEntity Team { get; set; }
#endif
        /// <summary>The teamId property</summary>
        public int? TeamId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamInviteEntity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamInviteEntity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamInviteEntity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "expireAt", n => { ExpireAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "isActive", n => { IsActive = n.GetBoolValue(); } },
                { "owner", n => { Owner = n.GetObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.UserEntity>(global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.UserEntity.CreateFromDiscriminatorValue); } },
                { "team", n => { Team = n.GetObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamEntity>(global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamEntity.CreateFromDiscriminatorValue); } },
                { "teamId", n => { TeamId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteDateTimeOffsetValue("expireAt", ExpireAt);
            writer.WriteIntValue("id", Id);
            writer.WriteBoolValue("isActive", IsActive);
            writer.WriteObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.UserEntity>("owner", Owner);
            writer.WriteObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.TeamEntity>("team", Team);
            writer.WriteIntValue("teamId", TeamId);
        }
    }
}
#pragma warning restore CS0618
