// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace AppBlueprint.Presentation.Ui.Sdk.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CityEntity : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CountryEntity? Country { get; set; }
#nullable restore
#else
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CountryEntity Country { get; set; }
#endif
        /// <summary>The countryId property</summary>
        public int? CountryId { get; set; }
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The postalCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.StateEntity? State { get; set; }
#nullable restore
#else
        public global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.StateEntity State { get; set; }
#endif
        /// <summary>The stateId property</summary>
        public int? StateId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CityEntity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CityEntity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CityEntity();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "country", n => { Country = n.GetObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CountryEntity>(global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CountryEntity.CreateFromDiscriminatorValue); } },
                { "countryId", n => { CountryId = n.GetIntValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "postalCode", n => { PostalCode = n.GetStringValue(); } },
                { "state", n => { State = n.GetObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.StateEntity>(global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.StateEntity.CreateFromDiscriminatorValue); } },
                { "stateId", n => { StateId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.CountryEntity>("country", Country);
            writer.WriteIntValue("countryId", CountryId);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("postalCode", PostalCode);
            writer.WriteObjectValue<global::AppBlueprint.Presentation.Ui.Sdk.Client.Models.StateEntity>("state", State);
            writer.WriteIntValue("stateId", StateId);
        }
    }
}
#pragma warning restore CS0618
