@page "/simple-login"
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 400px;
            margin: 50px auto;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="email"], input[type="password"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }
        button:hover {
            background-color: #0056b3;
        }
        .tab-buttons {
            display: flex;
            margin-bottom: 20px;
        }
        .tab-button {
            flex: 1;
            padding: 10px;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            cursor: pointer;
        }
        .tab-button.active {
            background-color: #007bff;
            color: white;
        }
        .form-container {
            display: none;
        }
        .form-container.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="tab-buttons">
        <div class="tab-button active" onclick="showLogin()">Login</div>
        <div class="tab-button" onclick="showRegister()">Register</div>
    </div>

    <!-- Login Form -->
    <div id="login-container" class="form-container active">
        <h2>Login</h2>
        <form id="login-form" method="post" action="/login" onsubmit="handleLogin(event)">
            <div class="form-group">
                <label for="login-email">Email</label>
                <input type="email" id="login-email" name="email" autocomplete="username" required>
            </div>
            <div class="form-group">
                <label for="login-password">Password</label>
                <input type="password" id="login-password" name="password" autocomplete="current-password" required>
            </div>
            <button type="submit">Sign In</button>
        </form>
    </div>

    <!-- Registration Form -->
    <div id="register-container" class="form-container">
        <h2>Register</h2>
        <form id="register-form" method="post" action="/register" onsubmit="handleRegister(event)">
            <div class="form-group">
                <label for="register-name">Full Name</label>
                <input type="text" id="register-name" name="name" autocomplete="name" required>
            </div>
            <div class="form-group">
                <label for="register-email">Email</label>
                <input type="email" id="register-email" name="email" autocomplete="username" required>
            </div>
            <div class="form-group">
                <label for="register-password">Password</label>
                <input type="password" id="register-password" name="password" autocomplete="new-password" required>
            </div>
            <div class="form-group">
                <label for="register-confirm-password">Confirm Password</label>
                <input type="password" id="register-confirm-password" name="confirm-password" autocomplete="new-password" required>
            </div>
            <button type="submit">Register</button>
        </form>
    </div>

    <script>
        function showLogin() {
            document.getElementById('login-container').classList.add('active');
            document.getElementById('register-container').classList.remove('active');
            document.querySelector('.tab-button:first-child').classList.add('active');
            document.querySelector('.tab-button:last-child').classList.remove('active');
        }

        function showRegister() {
            document.getElementById('login-container').classList.remove('active');
            document.getElementById('register-container').classList.add('active');
            document.querySelector('.tab-button:first-child').classList.remove('active');
            document.querySelector('.tab-button:last-child').classList.add('active');
        }

        function handleLogin(event) {
            event.preventDefault();
            
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            if (!email || !password) {
                alert('Please enter both email and password');
                return;
            }
            
            // Simulate login
            alert('Login attempt with: ' + email);
            
            // Redirect after delay for password manager to detect
            setTimeout(() => {
                window.location.href = '/';
            }, 1000);
        }

        function handleRegister(event) {
            event.preventDefault();
            
            const name = document.getElementById('register-name').value;
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;
            const confirmPassword = document.getElementById('register-confirm-password').value;
            
            if (!name || !email || !password) {
                alert('Please fill in all fields');
                return;
            }
            
            if (password !== confirmPassword) {
                alert('Passwords do not match');
                return;
            }
            
            // Simulate registration
            alert('Registration attempt with: ' + email);
            
            // Redirect after delay for password manager to detect
            setTimeout(() => {
                window.location.href = '/';
            }, 1000);
        }
    </script>
</body>
</html>

@code {
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // This ensures the form is ready for password managers
            StateHasChanged();
        }
    }
}
