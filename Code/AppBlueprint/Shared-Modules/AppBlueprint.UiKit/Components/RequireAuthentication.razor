@using AppBlueprint.Infrastructure.Authorization
@using AppBlueprint.UiKit.Components.Authentication
@inject NavigationManager NavigationManager

@if (_isAuthenticated)
{
    @ChildContent
}
else if (_isCheckingAuth)
{
    <MudProgressCircular Indeterminate="true" />
}

@code {
    [Parameter]
    public required RenderFragment ChildContent { get; set; }
    
    [CascadingParameter]
    public required AuthProvider Auth { get; set; }

    private bool _isAuthenticated;
    private bool _isCheckingAuth = true;
    private bool _hasNavigated = false;

    protected override void OnInitialized()
    {
        if (Auth is null)
        {
            Console.Error.WriteLine("Error: AuthProvider could not be found.");
            _isCheckingAuth = false;
            return;
        }
        
        // Check if user is authenticated
        _isAuthenticated = Auth.IsAuthenticated;
        _isCheckingAuth = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasNavigated)
        {
            if (Auth is null || !_isAuthenticated)
            {
                _hasNavigated = true;
                NavigationManager.NavigateTo("/login", forceLoad: true);
            }
        }
        
        await base.OnAfterRenderAsync(firstRender);
    }
}