<MudDrawer Open="@DrawerOpen" OpenChanged="DrawerOpenChanged" Elevation="2">
    @* <MudImage Class="mt-4 ml-4" Src="https://brandfetch.com/stripe.com?view=library&library=default&collection=logos&asset=idYzgin0fr&utm_source=https%253A%252F%252Fbrandfetch.com%252Fstripe.com&utm_medium=copyAction&utm_campaign=brandPageReferral" Alt="Logo"
              Width="50"/> *@

    <MudDrawerHeader>
        <MudNavMenu>

            @if (Links is not null)
            {
                foreach (var link in Links)
                {
                    <MudNavLink Href="@link.Href" Icon="@link.MudblazorIconPath"> @link.Name </MudNavLink>
                }
            }
        </MudNavMenu>
    </MudDrawerHeader>
</MudDrawer>

@code {
    [CascadingParameter] public List<NavLinkMetadata> Links { get; set; } = new();

    [Parameter] public bool DrawerOpen { get; set; }
    [Parameter] public EventCallback<bool> DrawerOpenChanged { get; set; }
    [Parameter] public required MudImage Logo { get; set; }

    protected override void OnInitialized()
    {
        if (Links is null)
        {
            Links = new List<NavLinkMetadata>();
        }

        // Check if a "Dashboard" link already exists before adding it
        if (Links.All(link => link.Href != "/"))
        {
            Links.Insert(0, new NavLinkMetadata { Name = "Dashboard", Href = "/", MudblazorIconPath = "@Icons.Material.Filled.Home" });
        }

        // Create a copy to avoid collection modified exception
        var linksCopy = Links.ToList();
        foreach (var link in linksCopy)
        {
            // Skip the "/" (Dashboard) link
            if (link.Href is not "/")
            {
                Console.WriteLine($"Link: {link.Name} - {link.Href}");
            }
        }
    }
}